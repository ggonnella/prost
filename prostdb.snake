#!/usr/bin/env python3

include: "common.snake"

#
# Notes:
# - in previous versions of snakemake the ancient() function did
#   not work properly here (i.e. on files created by other rules);
#   in this case, update snakemake (version 5.32.2 works)
# - when updating snakemake, conda messed up with libffi; the
#   workaround is to go to the directory lib under the active env location
#   (see with conda info, in my case it is ~/tools/miniconda/3/lib) and do
#   ```ln -s libffi.so.7 libffi.so.6```
#

rule initialize:
  output:
    datadir=directory(path.dbdata)
  shell:
    """
    mysql_install_db --user={config[sysuser]} --datadir={output.datadir}
    """

checkpoint start_server:
  input:
    datadir=rules.initialize.output.datadir
  output:
    socket=path.socket
  shell:
    """
    mysqld_safe --datadir={input.datadir} \
                --socket={output.socket} \
                --user={config[sysuser]} &
    """

rule set_root_password:
  input:
    socket=ancient(rules.start_server.output.socket),
    datadir=ancient(rules.initialize.output.datadir)
  output:
    done=touch(path.db/"done.set_root_password")
  shell:
    """
    mysqladmin -u root --socket={socket} password {dbrootpass}
    """

rule stop_server:
  input:
    ancient(rules.set_root_password.output.done),
    socket=ancient(rules.start_server.output.socket)
  shell:
    """
    mysqladmin -u root --password={config[dbrootpass]} \
                       --socket={input.socket} shutdown
    """

rule create_db:
  input:
    ancient(rules.set_root_password.output.done),
    socket=ancient(rules.start_server.output.socket)
  output:
    done=touch(path.db/"done.create_db")
  shell:
    """
    COMMANDS="CREATE DATABASE \`{config[dbname]}\`; "
    echo ${{COMMANDS}}
    echo "${{COMMANDS}}" | mysql -u root \
                           --password={config[dbrootpass]} \
                           --socket={input.socket}
    """

rule create_dbuser:
  input:
    ancient(rules.create_db.output.done),
    socket=ancient(rules.start_server.output.socket)
  output:
    done=touch(path.db/"done.create_db_user")
  shell:
    """
    COMMANDS="CREATE USER '{config[dbuser]}' IDENTIFIED BY '{config[dbpass]}'; "
    COMMANDS+="GRANT USAGE ON *.* TO '{config[dbuser]}'@localhost "
    COMMANDS+="  IDENTIFIED BY '{config[dbpass]}'; "
    COMMANDS+="GRANT ALL PRIVILEGES ON \`{config[dbname]}\`.* TO"
    COMMANDS+="  '{config[dbuser]}'@localhost; "
    COMMANDS+="FLUSH PRIVILEGES;"
    echo ${{COMMANDS}}
    echo "${{COMMANDS}}" | mysql -u root \
                           --password={config[dbrootpass]} \
                           --socket={input.socket}
    """

rule root_connect:
  input:
    socket=ancient(rules.start_server.output.socket)
  shell:
    """
    mysql --socket={input.socket} --database={config[dbname]} \
          -u root --password={config[dbrootpass]}
    """

rule show_processes:
  input:
    socket=ancient(rules.start_server.output.socket)
  shell:
    """
    mysqladmin processlist -u root \
        --password={config[dbrootpass]} \
        --socket={input.socket}
    """

rule connect:
  input:
    ancient(rules.create_dbuser.output.done),
    socket=ancient(rules.start_server.output.socket)
  shell:
    """
    mysql --socket={input.socket} \
          --database={config[dbname]} \
          -u {config[dbuser]} \
          --password={config[dbpass]}
    """
