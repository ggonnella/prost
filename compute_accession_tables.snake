#!/usr/bin/env python3
"""
Tasks for computing tables for relating the refseq assembly accession to
(1) Refseq sequence accessions (of each sequence of the assembly)
(2) Genbank assembly accession (of the equivalent Genbank assembly)
(3) Genbank sequence accessions (of each sequence of the eq Genbank assembly)

In order to list the sequence accessions the gzipped sequence file is
uncompressed and the Fasta header are read:
(1) in the case of Refseq, the compressed sequence file is already available,
as downloaded by download_genome_sequences.snake.
(2) in the case of Genbank the file is downloaded, uncompressed, the FastaID are
extracted, and then it is deleted.
"""
from glob import glob
import os
import shutil
import re
import sh
import tqdm

include: "common.snake"

rule all:
  input:
    expand(str(path.accessions/"gbasm_rsasm_gbseq.{domain}.done"), domain=config["domains"]),
    expand(str(path.accessions/"rsasm.{domain}.tsv"), domain=config["domains"]),
    expand(str(path.accessions/"gbasm_rsasm.{domain}.tsv"), domain=config["domains"]),
    expand(str(path.accessions/"rsasm_rsseq.{domain}.done"), domain=config["domains"])

rule table_rs_asm_accessions:
  input:
    summary=path.asmsummary/"complete_genomes_summary_refseq_{domain}.txt"
  output:
    rs=path.accessions/"rsasm.{domain}.tsv"
  run:
    r_tsv = open(output.rs, "w")
    with open(input.summary) as f:
      for line in f:
        if line[0] != "#":
          elems = line.rstrip().split("\t")
          r_tsv.write(elems[0]+"\n")
    r_tsv.close()

rule table_gb_asm_accessions:
  input:
    summary=path.asmsummary/"complete_genomes_summary_refseq_{domain}.txt"
  output:
    gb2rs=path.accessions/"gbasm_rsasm.{domain}.tsv"
  run:
    g_tsv = open(output.gb2rs, "w")
    with open(input.summary) as f:
      for line in f:
        if line[0] != "#":
          elems = line.rstrip().split("\t")
          g_tsv.write(elems[17]+"\t"+elems[0]+"\n")
    g_tsv.close()

rule update_gbseq_list:
  input:
    summary=path.asmsummary/"complete_genomes_summary_refseq_{domain}.txt"
  params:
    prev=str(path.accessions/"gbasm_rsasm_gbseq.{domain}.tsv")
  output: touch(path.accessions/"gbasm_rsasm_gbseq.{domain}.done")
  script: "scripts/gb_seq_accessions_for_assemblies.py"

rule update_rsseq_list:
  input:
    summary=path.asmsummary/"complete_genomes_summary_refseq_{domain}.txt"
  params:
    prev=str(path.accessions/"rsasm_rsseq.{domain}.tsv"),
    globpattern=str(path.genomeseq/"{domain}/chunk.*")
  output: touch(path.accessions/"rsasm_rsseq.{domain}.done")
  script: "scripts/rs_seq_accessions_for_assemblies.py"

