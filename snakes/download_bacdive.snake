#!/usr/bin/env python3
include: "common.snake"

rule all:
  input:
    path.bacdive/"bacdive.details"

rule prepare_id_list_update:
  params:
    possible_input_ids=path.bacdive/"bacdive.ids",
    possible_input_lastpage=path.bacdive/"bacdive.last_processed_idslist_page"
  output:
    ids=temp(path.bacdive/"bacdive.ids_copy"),
    lastpage=temp(path.bacdive/"bacdive.last_processed_idslist_page_copy")
  shell:
    """
    if [ -e {params.possible_input_ids} ]; then
      cp {params.possible_input_ids} {output.ids}
    else
      touch {output.ids}
    fi
    if [ -e {params.possible_input_lastpage} ]; then
      cp {params.possible_input_lastpage} {output.lastpage}
    else
      echo "0" >> {output.lastpage}
    fi
    """

rule update_id_list:
  input:
    ids=rules.prepare_id_list_update.output.ids,
    lastpage=rules.prepare_id_list_update.output.lastpage
  output:
    ids=path.bacdive/"bacdive.ids",
    lastpage=path.bacdive/"bacdive.last_processed_idslist_page"
  params:
    script=srcdir("../scripts/bacdive_download_id_list.py"),
    u=config["bacdive_user"],
    p=config["bacdive_pass"]
  shell:
    """
    done=$(cat {input.lastpage})
    {params.script} --done $done {params.u} {params.p} {input.ids} \
        > {output.lastpage}
    cp {input.ids} {output.ids}
    """

rule prepare_strain_info_download:
  params:
    possible_input_details=path.bacdive/"bacdive.details"
  output:
    details=path.bacdive/"bacdive.details_moved"
  shell:
    """
    if [ -e {params.possible_input_details} ]; then
      mv {params.possible_input_details} {output.details}
    else
      touch {output.details}
    fi
    """

rule download_strain_info:
  input:
    ids=rules.update_id_list.output.ids,
    details=rules.prepare_strain_info_download.output.details
  output:
    new=temp(path.bacdive/"bacdive.details_new"),
    details=path.bacdive/"bacdive.details"
  params:
    u=config["bacdive_user"],
    p=config["bacdive_pass"],
    script=srcdir("../scripts/bacdive_download_strain_info.py")
  shell:
    """
    {params.script} --previous {input.details} \
        {params.u} {params.p} {input.ids} > {output.new}
    cat {output.new} >> {input.details}
    mv {input.details} {output.details}
    """
